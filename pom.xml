<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ru.olshevskiy</groupId>
	<artifactId>blog-engine</artifactId>
	<version>${revision}${sha1}${changelist}</version>
	<packaging>pom</packaging>
	<name>Multi-module Spring Boot Project Blog Engine</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.3</version>
	</parent>

	<modules>
		<module>dto</module>
		<module>api</module>
		<module>domain</module>
		<module>db</module>
		<module>impl</module>
	</modules>

	<properties>
		<!-- Version control properties -->
		<revision>1.0.0</revision>
		<sha1/>
		<changelist>-SNAPSHOT</changelist>

		<!-- Project properties -->
		<java.version>21</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Spring Boot properties -->
		<org.springframework.boot.version>3.3.3</org.springframework.boot.version>
		<org.springframework.security.version>6.3.3</org.springframework.security.version>

		<!-- Database properties -->
		<flyway-core.version>10.18.0</flyway-core.version>
		<flyway-mysql.version>10.18.0</flyway-mysql.version>
		<mysql-connector-java.version>8.0.33</mysql-connector-java.version>
		<org.testcontainers.version>1.20.1</org.testcontainers.version>

		<!-- Flyway properties -->
		<flyway.driver>com.mysql.cj.jdbc.Driver</flyway.driver>
		<flyway.url>jdbc:mysql://localhost:3306/blogdb?serverTimezone=Europe/Moscow</flyway.url>
		<flyway.locations>classpath:db/migration</flyway.locations>
		<flyway.username>root</flyway.username>
		<flyway.password>pass</flyway.password>

		<!-- External libraries properties -->
		<mapstruct.version>1.6.0</mapstruct.version>
		<mapstruct-processor.version>1.6.0</mapstruct-processor.version>
		<lombok.version>1.18.34</lombok.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<com.github.cage.version>1.0</com.github.cage.version>
		<javax.validation.version>2.0.1.Final</javax.validation.version>
		<swagger-annotations.version>2.2.22</swagger-annotations.version>
		<springdoc-openapi-ui.version>1.8.0</springdoc-openapi-ui.version>
		<com.cloudinary.version>1.39.0</com.cloudinary.version>
		<greenmail-junit5.version>2.1.0-rc-1</greenmail-junit5.version>
		<org.awaitility.version>4.2.2</org.awaitility.version>

		<!-- Plugins properties -->
		<flyway-maven-plugin.version>10.18.0</flyway-maven-plugin.version>
		<flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
		<maven-surefire-plugin.version>3.5.0</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>3.5.0</maven-failsafe-plugin.version>
		<springdoc-openapi-maven-plugin.version>1.4</springdoc-openapi-maven-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${mapstruct-processor.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok-mapstruct-binding</artifactId>
			<version>${lombok-mapstruct-binding.version}</version>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${org.springframework.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-thymeleaf</artifactId>
				<version>${org.springframework.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${org.springframework.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${org.springframework.boot.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-validation</artifactId>
				<version>${org.springframework.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
				<version>${org.springframework.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-test</artifactId>
				<version>${org.springframework.security.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-mail</artifactId>
				<version>${org.springframework.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>com.icegreen</groupId>
				<artifactId>greenmail-junit5</artifactId>
				<version>${greenmail-junit5.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.awaitility</groupId>
				<artifactId>awaitility</artifactId>
				<version>${org.awaitility.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-core</artifactId>
				<version>${flyway-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-mysql</artifactId>
				<version>${flyway-mysql.version}</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers</artifactId>
				<version>${org.testcontainers.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>mysql</artifactId>
				<version>${org.testcontainers.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.github.cage</groupId>
				<artifactId>cage</artifactId>
				<version>${com.github.cage.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${javax.validation.version}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger.core.v3</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger-annotations.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-ui</artifactId>
				<version>${springdoc-openapi-ui.version}</version>
			</dependency>
			<dependency>
				<groupId>com.cloudinary</groupId>
				<artifactId>cloudinary-core</artifactId>
				<version>${com.cloudinary.version}</version>
			</dependency>
			<dependency>
				<groupId>com.cloudinary</groupId>
				<artifactId>cloudinary-http44</artifactId>
				<version>${com.cloudinary.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${org.springframework.boot.version}</version>
					<configuration>
						<mainClass>ru.olshevskiy.blogengine.BlogEngineApplication</mainClass>
						<layout>JAR</layout>
					</configuration>
					<executions>
						<execution>
							<id>repackage</id>
						</execution>
						<execution>
							<id>pre-integration-test</id>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>post-integration-test</id>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.flywaydb</groupId>
					<artifactId>flyway-maven-plugin</artifactId>
					<version>${flyway-maven-plugin.version}</version>
					<configuration>
						<driver>${flyway.driver}</driver>
						<url>${flyway.url}</url>
						<locations>${flyway.locations}</locations>
						<user>${flyway.username}</user>
						<password>${flyway.password}</password>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
					<configuration>
						<updatePomFile>true</updatePomFile>
						<flattenMode>resolveCiFriendliesOnly</flattenMode>
					</configuration>
					<executions>
						<execution>
							<id>flatten</id>
							<phase>process-resources</phase>
							<goals>
								<goal>flatten</goal>
							</goals>
						</execution>
						<execution>
							<id>flatten.clean</id>
							<phase>clean</phase>
							<goals>
								<goal>clean</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<annotationProcessorPaths>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>${lombok.version}</version>
							</path>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok-mapstruct-binding</artifactId>
								<version>${lombok-mapstruct-binding.version}</version>
							</path>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${mapstruct-processor.version}</version>
							</path>
						</annotationProcessorPaths>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<excludes>
							<exclude>**/*IntegrationTest.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<configuration>
						<argLine>-Dfile.encoding=UTF-8</argLine>
						<includes>
							<include>**/*IntegrationTest.java</include>
						</includes>
					</configuration>
					<executions>
						<execution>
							<id>integration-tests</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.springdoc</groupId>
					<artifactId>springdoc-openapi-maven-plugin</artifactId>
					<version>${springdoc-openapi-maven-plugin.version}</version>
					<configuration>
						<skip>false</skip>
						<outputFileName>blogapi.json</outputFileName>
						<outputDir>${project.build.directory}/swagger-output</outputDir>
					</configuration>
					<executions>
						<execution>
							<id>integration-test</id>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
